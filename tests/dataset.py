# Simple datasets designed for danku contracts
# Data format is (X, Y, C)
# Where X and Y are the coordinates, and C is the class

class Dataset(object):
    def __init__(self):
        self.partition_size = 5
        self.max_num_data_groups = 100
        self.training_data_group_size = 70
        self.testing_data_group_size = self.max_num_data_groups -\
            self.training_data_group_size
        self.dimensions = (13, 13)
        self.data = []

class SampleCircleDataset(Dataset):
    '''
                               (+)
    - - - - - - 1 - - - - - - | 6
    - - - - - 1 1 1 - - - - - | 5
    - - - - 1 1 - 1 1 - - - - | 4
    - - - 1 1 - 0 - 1 1 - - - | 3
    - - 1 1 - 0 0 0 - 1 1 - - | 2
    - 1 1 - 0 0 0 0 0 - 1 1 - | 1
    1 1 - 0 0 0 0 0 0 0 - 1 1 | 0
    - 1 1 - 0 0 0 0 0 - 1 1 - | 1
    - - 1 1 - 0 0 0 - 1 1 - - | 2
    - - - 1 1 - 0 - 1 1 - - - | 3
    - - - - 1 1 - 1 1 - - - - | 4
    - - - - - 1 1 1 - - - - - | 5
    - - - - - - 1 - - - - - - | 6
    _________________________  (-)
(-) 6 5 4 3 2 1 0 1 2 3 4 5 6 (+)
    '''
    def __init__(self):
        super().__init__()
        self.data = [(0,6,1),(-1,5,1),(0,5,1),(1,5,1),(-2,4,1),(-1,4,1),(1,4,1),
        (2,4,1),(-3,3,1),(-2,3,1),(2,3,1),(3,3,1),(-4,2,1),(-3,2,1),(3,2,1),
        (4,2,1),(-6,0,1),(-5,0,1),(5,0,1),(6,0,1),(-5,-1,1),(-4,-1,1),(4,-1,1),
        (5,-1,1)(-4,-2,1),(-3,-2,1),(3,-2,1),(4,-2,1),(-3,-3,1),(-2,-3,1),
        (2,-3,1),(3,-3,1),(-2,-4,1),(-1,-4,1),(1,-4,1),(2,-4,1),(-1,-5,1),
        (0,-5,1),(1,-5,1),(0,-6,1),(0,3,0),(-1,2,0),(0,2,0),(1,2,0),(-2,1,0),
        (-1,1,0),(0,1,0),(1,1,0),(2,1,0),(-3,0,0),(-2,0,0),(-1,0,0),(0,0,0),
        (1,0,0),(2,0,0),(3,0,0),(-2,-1,0),(-1,-1,0),(0,-1,0),(1,-1,0),(2,-1,0),
        (-1,-2,0),(0,-2,0),(1,-2,0),(0,-3,0)]

class SampleSwirlDataset(Dataset):
    '''
                               (+)
    - 0 0 0 0 0 0 0 0 0 0 0 0 | 6
    - 0 - - - - - - - - - - - | 5
    - 0 - 1 1 1 1 1 1 1 1 1 - | 4
    - 0 - 1 - 0 0 0 0 0 - 1 - | 3
    - 0 - 1 - 0 1 1 - 0 - 1 - | 2
    - 0 - 1 - 0 - 1 - 0 - 1 - | 1
    - 0 - 1 - 0 - 1 - 0 - 1 - | 0
    - 0 - 1 - - - 1 - 0 - 1 - | 1
    - 0 - 1 1 1 1 1 - 0 - 1 - | 2
    - 0 - - - - - - - 0 - 1 - | 3
    - 0 0 0 0 0 0 0 0 0 - 1 - | 4
    - - - - - - - - - - - 1 - | 5
    1 1 1 1 1 1 1 1 1 1 1 1 - | 6
    _________________________  (-)
(-) 6 5 4 3 2 1 0 1 2 3 4 5 6 (+)
    '''
    def __init__(self):
        super().__init__()
        self.data = [(-5,6,0),(-4,6,0),(-3,6,0),(-2,6,0),(-1,6,0),(0,6,0),
        (1,6,0),(2,6,0),(3,6,0),(4,6,0),(5,6,0),(6,6,0),(-5,5,0),(-5,4,0),
        (-5,3,0),(-5,2,0),(-5,1,0),(-5,0,0),(-5,-1,0),(-5,-2,0),(-5,-3,0),
        (-5,-4,0),(-4,-4,0),(-3,-4,0),(-2,-4,0),(-1,-4,0),(0,-4,0),(1,-4,0),
        (2,-4,0),(3,-4,0),(3,-3,0),(3,-2,0),(3,-1,0),(3,0,0),(3,1,0),(3,2,0),
        (3,3,0),(2,3,0),(1,3,0),(0,3,0),(-1,3,0),(-1,2,0),(-1,1,0),(-1,0,0),
        (0,2,1),(1,2,1),(1,1,1),(1,0,1),(1,-1,1),(1,-2,1),(0,-2,1),(-1,-2,1),
        (-2,-2,1),(-3,-2,1),(-3,-1,1),(-3,0,1),(-3,1,1),(-3,2,1),(-3,3,1),
        (-3,4,1),(-2,4,1),(-1,4,1),(0,4,1),(1,4,1),(2,4,1),(3,4,1),(4,4,1),
        (5,4,1),(5,3,1),(5,2,1),(5,1,1),(5,0,1),(5,-1,1),(5,-2,1),(5,-3,1),
        (5,-4,1),(5,-5,1),(5,-6,1),(4,-6,1),(3,-6,1),(2,-6,1),(1,-6,1),(0,-6,1),
        (-1,-6,1),(-2,-6,1),(-3,-6,1)]

class SampleHalfDividedDataset(Dataset):
    '''
                               (+)
    - - - 1 - 1 - - - - - - - | 6
    - 1 - - - - - 1 - - - - - | 5
    1 - 1 - 1 - 1 - - - - - 0 | 4
    - 1 - - 1 - - - - - - 0 - | 3
    1 - 1 1 - - - - - 0 - - 0 | 2
    - - - - - - - - - 0 - - - | 1
    - 1 - - - - - - - - 0 - - | 0
    - - - - - - - - 0 0 - - 0 | 1
    - - - - - - - - - - 0 - - | 2
    - - - - - - - - 0 0 - - 0 | 3
    - - - - - - 0 0 - - 0 - - | 4
    - - - - - 0 - - - 0 - 0 - | 5
    - - - - - - 0 - - - - - 0 | 6
    _________________________  (-)
(-) 6 5 4 3 2 1 0 1 2 3 4 5 6 (+)
    '''
    def __init__(self):
        super().__init__()
        self.data = [(-3,6,1),(-1,6,1),(-5,5,1),(1,5,1),(-6,4,1),(-4,4,1),
        (-2,4,1),(0,4,1),(-5,3,1),(-2,3,1),(-6,2,1),(-4,2,1),(-3,2,1),(-5,0,1),
        (6,4,0),(5,3,0),(3,2,0),(6,2,0),(3,1,0),(4,0,0),(2,-1,0),(3,-1,0),
        (6,-1,0),(4,-2,0),(2,-3,0),(3,-3,0),(6,-3,0),(0,-4,0),(1,-4,0),(4,-4,0),
        (-1,-5,0),(3,-5,0),(5,-5,0),(0,-6,0),(6,-6,0)]

class SampleAcrossCornerDataset(Dataset):
    '''
                               (+)
    0 0 0 - - - - - - - 1 1 1 | 6
    0 0 0 0 - - - - - 1 1 1 1 | 5
    0 0 0 0 - - - - - 1 1 1 1 | 4
    - 0 0 0 - - - - - 1 1 1 - | 3
    - - - - 0 - - - 1 - - - - | 2
    - - - - - 0 - 1 - - - - - | 1
    - - - - - - - - - - - - - | 0
    - - - - - 1 - 0 - - - - - | 1
    - - - - 1 - - - 0 - - - - | 2
    - 1 1 1 - - - - - 0 0 0 - | 3
    1 1 1 1 - - - - - 0 0 0 0 | 4
    1 1 1 1 - - - - - 0 0 0 0 | 5
    1 1 1 - - - - - - - 0 0 0 | 6
    _________________________  (-)
(-) 6 5 4 3 2 1 0 1 2 3 4 5 6 (+)
    '''
    def __init__(self):
        super().__init__()
        self.data = [(-6,6,0),(-5,6,0),(-4,6,0),(-6,5,0),(-5,5,0),(-4,5,0),
        (-3,5,0),(-6,4,0),(-5,4,0),(-4,4,0),(-3,4,0),(-5,3,0),(-4,3,0),(-3,3,0),
        (-2,2,0),(-1,1,0),(1,-1,0),(2,-2,0),(3,-3,0),(4,-3,0),(5,-3,0),(3,-4,0),
        (4,-4,0),(5,-4,0),(6,-4,0),(3,-5,0),(4,-5,0),(5,-5,0),(6,-5,0),(4,-6,0),
        (5,-6,0),(6,-6,0)]
